// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Video.Infrastructrue.Database;

namespace Video.Infrastructrue.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20181202090557_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Video.Core.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("FreeVideoCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int?>("GeneralAgentId");

                    b.Property<string>("HeadImage")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsGeneralAgent")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("IsShared")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int?>("Leader1Id");

                    b.Property<int?>("Leader2Id");

                    b.Property<int?>("Leader3Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20)
                        .HasDefaultValue("");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("PromoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Score")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("VipExpirationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("VipType");

                    b.HasKey("Id");

                    b.HasIndex("GeneralAgentId");

                    b.HasIndex("Leader1Id");

                    b.HasIndex("Leader2Id");

                    b.HasIndex("Leader3Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Video.Core.Entities.Account", b =>
                {
                    b.HasOne("Video.Core.Entities.Account", "GeneralAgent")
                        .WithMany("Subordinates")
                        .HasForeignKey("GeneralAgentId");

                    b.HasOne("Video.Core.Entities.Account", "Leader1")
                        .WithMany("Subordinates1")
                        .HasForeignKey("Leader1Id");

                    b.HasOne("Video.Core.Entities.Account", "Leader2")
                        .WithMany("Subordinates2")
                        .HasForeignKey("Leader2Id");

                    b.HasOne("Video.Core.Entities.Account", "Leader3")
                        .WithMany("Subordinates3")
                        .HasForeignKey("Leader3Id");
                });
#pragma warning restore 612, 618
        }
    }
}
